getwd()
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10 ,length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Kevin")
my_name
paste(my_name, collapse = " ")
paste("hello", "world!", sep= " ")
paste("Hello", "world!", sep= " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, narf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect(c("foo", "bar"))
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix <- matrix(1:20, 4, 5)
my_matrix <- matrix(data=1:20, nrow=4, ncol=5)
my_matrix2 <- matrix(1:20, 4, 5)
indentical(my_matrix, my_matrix2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
?colnames
colnames(my_data) <- cnames
my_data
setwd("~/Coursera/R Programming/Quiz1")
x <- c(1, 3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- 1:4
y <- 2
x + y
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x
hw_data <- read.csv("hw1_data.csv")
View(hw_data)
View(hw_data)
hw_data[1:2]
hw_data[2]
hw_data[1,1]
hw_data[1,]
hw_data[2,]
hw_data[1:2,]
nrows(hw_data)
nrow(hw_data)
?tail
tail(hw_data, 2)
hw_data[47,]
is.na(hw_data[1,])
is.na(hw_data[,1])
sum(is.na(hw_data[,1]))
?mean
mean(hw_data[,1], na.rm = TRUE)
!is.na(hw_data)
hw_data[!is.na(hw_data)]
hw_data["Ozone" > 31]
hw_data["Ozone" > 31 & "Temp" > 90]
hw_data["Ozone" > 31 & "Temp" > 90 & !is.na(hw_data)]
complete.cases(hw_data)
good <- complete.cases(hw_data)
hw_data[good,]
hw_data[good,][1:6,]
hw_data[good,]["Ozone" > 31 & "Temp > 90"]
hw_data[good,]["Ozone" > 31 & "Temp" > 90]
hw_data[good,]["Ozone" > 31 | "Temp" > 90]
hw_data[good,]
hw_no_na <- hw_data[good,]
hw_no_na["Ozone" > 31,]
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
0
names(hw_data)
View(hw_no_na)
hw_no_na["Ozone" > 31]
hw_no_na["Ozone" > 31,]
hw_no_na[3,]
hw_no_na[,1][1:6]
hw_no_na[,1][1:6][hw_no_na > 31]
hw_no_na[1:6]
hw_no_na[1:6,]
hw_no_na[1:6,]["Month" = 6]
hw_no_na[1:6,]["Month" == 6]
hw_no_na[1:20,]["Month" == 6]
hw_no_na[1:20,]
hw_no_na["Month" == 6]
hw_no_na
hw_no_na["Month"]
hw_no_na[hw_no_na[,1] > 31]
hw_no_na[,1] > 31
temp <- hw_no_na[,1] > 31
hw_no_na[temp]
hw_no_na[,temp]
setwd("~/Coursera/R Programming/diet_data")
list.files
list.files("diet_data")
dir()
andy <- read.csv("Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[, "Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day==30)
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss <- andy_start - andy_end
andy_loss
list.files()
files <- list.files()
files[1]
files[3:5]
head(read.csv[files[3]])
head(read.csv(files[3])
)
andy_david <- rbind(andy, read.csv(files[2]))
head(andy_david)
tail(andy_david)
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
for (i in 1:5) { dat <- rbind(dat, read.csv(files[i]))}
dat <- data.frame()
for (i in 1:5) { dat <- rbind(dat, read.csv(files[i]))}
str(dat)
median(dat$Weight)
dat[77,]
median(dat$Weight, na.rm=TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30), ]
dat_30
median(dat_30$Weight)
weightmedian(directory = "", day = 20)
./weightmedian(directory = "", day = 20)
median(dat_subset[, "Weight"], na.rm=TRUE)
weightmedian <- function(directory, day) {
files_list <- list.files(directory, full.names=TRUE)
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "Day"] == day), ]
median(dat_subset[, "Weight"], na.rm=TRUE)
}
weightmedian("", 20)
setwd("~/Coursera/R Programming")
weightmedian("diet_data", 20)
weightmedian("diet_data", 4)
weightmedian <- function(directory, day) {
files_list <- list.files(directory, full.names=TRUE)
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <- dat[which(dat[, "Day"] == day), ]
median(dat_subset[, "Weight"], na.rm=TRUE)
}
head(hw_data)
hw_data[which(hw_data[,"Ozone"] > 31)]
hw_data[which(hw_data[,"Ozone"] > 31),]
hw_data[which(hw_data[,"Ozone"] > 31 & hw_data[,"Temp"] > 90),]
mean(hw_data[which(hw_data[,"Ozone"] > 31 & hw_data[,"Temp"] > 90), 2]
)
hw_data[which(hw_data$Month == 5), ]
max(hw_data[which(hw_data$Month == 6), "Ozone" ]
)
?max
max(hw_data[which(hw_data$Month == 6), "Ozone" ], na.rm=TRUE)
library("swirl")
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 6 ,6))
unique(c(3, 4, 5, 5, 5, 6 ,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
setwd("~/Coursera/R Programming/Programming2/ProgrammingAssignment2")
?solve
v1 <- c(1:10)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
v1c <- makevector(v1)
v1c <- makeVector(v1)
v1c
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(v1c)
cachemean(v1c)
v2 <- c(3, 4, 5)
v2c <- makeVector(v2)
v1c
v2c
cachemean(v2c)
cachemean(v2c)
cachemean(v1c)
m <- matrix(1:6, nrow = 3, ncol = 3)
m
solve(m)
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
hilbert
h8 <- hilbert(8)
h8
solve(h8)
m <- matrix(1:6, nrow = 4, ncol = 3)
solve(m)
m <- matrix(1:6, nrow = 4, ncol = 4)
m <- matrix(1:6, nrow = 3, ncol = 3)
solve(m)
source("cachematrix.R")
makeCacheMatrix(h8)
mcm1 <- makeCacheMatrix(h8)
cacheSolve(mcm1)
cacheSolve(mcm1)
library(datasets)
data(iris)
?iris
Sepal.Length
iris
summary(iris)
head(iris)
?apply
apply(iris[, 1:4], 2, mean)
data(mtcars)
head(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
26.66364 - 15.10000
debug(ls)
ls
ls
ls()
q
0
quit
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern)
pattern)
